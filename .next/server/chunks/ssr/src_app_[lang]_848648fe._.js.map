{"version":3,"sources":["turbopack:///[project]/src/app/[lang]/ShemaMarkup.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/configs/metadata.ts","turbopack:///[project]/src/app/[lang]/mfelfelani/layout.tsx","turbopack:///[project]/src/libs/metadataHelper.ts"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const SchemaMarkup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SchemaMarkup() from the server but SchemaMarkup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/[lang]/ShemaMarkup.tsx\",\n    \"SchemaMarkup\",\n);\n","/* @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-08 15:28:13\n * @Description: Shared metadata generator for all pages\n */\n\nimport type { Metadata } from \"next\";\n\n// Constants\n\nimport type { Lang } from \"@/configs/language\";\n\n// Functions\n\nimport { getDictionary } from \"@/locale\";\nimport { getLocale, getSchemaLocale } from \"@/configs/language\";\n\n// Interfaces\n\nimport { BaseMeta, PageMeta } from \"@/Interfaces/meta\";\n\n// ---------- Config ----------\nconst SITE_URL = process.env.NEXT_PUBLIC_SITE_URL || \"\";\nconst SITE_NAME = \"AimoonHub\";\n\n// ---------- Helper Functions ----------\nfunction generateCanonicalUrl(lang: Lang, path: string = \"\"): string {\n  const cleanPath = path.startsWith(\"/\") ? path.slice(1) : path;\n  return `${SITE_URL}/${lang}${cleanPath ? `/${cleanPath}` : \"\"}`;\n}\n\nfunction generatePageTitle(pageTitle: string, baseTitle: string): string {\n  return pageTitle === baseTitle ? baseTitle : `${pageTitle} | ${baseTitle}`;\n}\n\nfunction combineKeywords(\n  baseKeywords: string[] = [],\n  pageKeywords: string[] = []\n): string[] {\n  return [...new Set([...baseKeywords, ...pageKeywords])];\n}\n\n// ---------- Main Metadata Generator ----------\nexport async function generatePageMetadata(\n  lang: Lang = \"en\",\n  pageKey?: string,\n  customMeta?: Partial<PageMeta>\n): Promise<Metadata> {\n  const dict = await getDictionary(lang);\n  const baseMeta = dict.meta as BaseMeta;\n  const pageMetaCandidate = pageKey\n    ? dict[`meta_${pageKey}` as keyof typeof dict]\n    : null;\n  const pageMeta = (pageMetaCandidate as PageMeta) || baseMeta;\n  const finalMeta: PageMeta = customMeta\n    ? { ...pageMeta, ...customMeta }\n    : pageMeta;\n\n  const pageTitle = generatePageTitle(finalMeta.title, baseMeta.title);\n  const canonicalUrl =\n    finalMeta.canonicalUrl || generateCanonicalUrl(lang, pageKey);\n\n  return {\n    title: pageTitle,\n    description: finalMeta.description,\n    keywords: combineKeywords(baseMeta.keywords, finalMeta.keywords).join(\", \"),\n\n    openGraph: {\n      title: pageTitle,\n      description: finalMeta.description,\n      url: canonicalUrl,\n      siteName: baseMeta.title,\n      type: \"website\",\n      images: [\n        {\n          url: `/images/og/og-${lang}${pageKey ? `-${pageKey}` : \"\"}.jpg`,\n          width: 1200,\n          height: 630,\n          alt: pageTitle,\n        },\n      ],\n      locale: getLocale(lang),\n    },\n\n    twitter: {\n      card: \"summary_large_image\",\n      title: pageTitle,\n      description: finalMeta.description,\n      images: [\n        `/images/twitter/twitter-${lang}${pageKey ? `-${pageKey}` : \"\"}.jpg`,\n      ],\n    },\n\n    robots: finalMeta.robots || { index: true, follow: true },\n\n    alternates: {\n      canonical: canonicalUrl,\n      languages: {\n        en: generateCanonicalUrl(\"en\", pageKey),\n        fa: generateCanonicalUrl(\"fa\", pageKey),\n      },\n    },\n\n    icons: {\n      icon:\n        process.env.NODE_ENV == \"production\"\n          ? process.env.NEXT_PUBLIC_BASE_PATH + \"/favicon.ico\"\n          : \"/favicon.ico\",\n      apple:\n        process.env.NODE_ENV == \"production\"\n          ? process.env.NEXT_PUBLIC_BASE_PATH + \"/apple-touch-icon.png\"\n          : \"/apple-touch-icon.png\",\n    },\n  };\n}\n\n// ---------- Schema Generators ----------\nexport function generateWebsiteSchema(lang: Lang) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    name: SITE_NAME,\n    url: SITE_URL,\n    inLanguage: getSchemaLocale(lang),\n    potentialAction: {\n      \"@type\": \"SearchAction\",\n      target: `${SITE_URL}/search?q={search_term_string}`,\n      \"query-input\": \"required name=search_term_string\",\n    },\n  };\n}\n\nexport function generateOrganizationSchema(lang: Lang) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    name: SITE_NAME,\n    url: SITE_URL,\n    logo: `${SITE_URL}/images/logo/logo.png`,\n    inLanguage: getSchemaLocale(lang),\n    sameAs: [\n      \"https://twitter.com/aimoonhub\",\n      \"https://linkedin.com/company/aimoonhub\",\n    ],\n  };\n}\n\nexport function generateArticleSchema(\n  lang: Lang,\n  article: {\n    title: string;\n    description: string;\n    image: string;\n    datePublished: string;\n    dateModified: string;\n    authorName: string;\n    authorUrl?: string;\n  }\n) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    headline: article.title,\n    description: article.description,\n    image: article.image,\n    datePublished: article.datePublished,\n    dateModified: article.dateModified,\n    author: {\n      \"@type\": \"Person\",\n      name: article.authorName,\n      ...(article.authorUrl && { url: article.authorUrl }),\n    },\n    publisher: {\n      \"@type\": \"Organization\",\n      name: SITE_NAME,\n      logo: {\n        \"@type\": \"ImageObject\",\n        url: `${SITE_URL}/images/logo/logo.png`,\n      },\n    },\n    inLanguage: getSchemaLocale(lang),\n  };\n}\n\nexport function generateBreadcrumbSchema(\n  items: { name: string; url: string }[]\n) {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: items.map((item, index) => ({\n      \"@type\": \"ListItem\",\n      position: index + 1,\n      name: item.name,\n      item: `${SITE_URL}${item.url}`,\n    })),\n  };\n}\n","/*\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-18 08:37:33\n * @Description:\n */\n\nimport { generateWebsiteSchema } from \"@/configs/metadata\";\n\n// Components\n\nimport { SchemaMarkup } from \"@/app/[lang]/ShemaMarkup\";\n\n// Interfaces\n\nimport { LangLayoutProps } from \"@/Interfaces/global\";\nimport { languages, type Lang } from \"@/configs/language\";\n\n// Functions\n\nimport { createMetadata } from \"@/libs/metadataHelper\";\n\n// Create Metadata\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ lang: string }>;\n}) {\n  return createMetadata(params, \"home_landing\");\n}\n\n// Page component\n\nexport default async function Page({ children, params }: LangLayoutProps) {\n  const resolvedParams = await params;\n  const lang =\n    resolvedParams.lang in languages ? (resolvedParams.lang as Lang) : \"en\";\n  const websiteSchema = generateWebsiteSchema(lang);\n\n  return (\n    <>\n      <SchemaMarkup schema={websiteSchema} />\n      {children}\n    </>\n  );\n}\n","/**\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-08 15:28:13\n * @Description: Shared metadata generator for all pages\n */\n\nimport { Lang, languages } from \"@/configs/language\";\nimport { generatePageMetadata } from \"@/configs/metadata\";\n\ntype Params = Promise<{ lang: string }>;\n\n/**\n * Generate metadata dynamically based on language and source key\n * @param params - Next.js dynamic route params\n * @param source - Metadata source key in dictionary\n */\nexport async function createMetadata(params: Params, source: string) {\n  const resolvedParams = await params;\n  const { lang = \"en\" } = resolvedParams ?? {};\n\n  const selected: Lang = lang in languages ? (lang as Lang) : \"en\";\n\n  return generatePageMetadata(selected, source);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}