{"version":3,"sources":["turbopack:///[project]/src/locale/index.ts","turbopack:///[project]/src/locale/en.ts","turbopack:///[project]/src/locale/fa.ts","turbopack:///[project]/src/locale/de.ts","turbopack:///[project]/src/configs/language.ts","turbopack:///[project]/src/app/[lang]/LangWrapper.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/app/[lang]/DetectDevice.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/src/app/[lang]/layout.tsx"],"sourcesContent":["import { cache } from \"react\";\nimport en from \"./en\";\nimport fa from \"./fa\";\nimport de from \"./de\";\n\nconst dictionaries = { en, fa, de };\n\nexport type Lang = keyof typeof dictionaries;\n\nexport const getDictionary = cache((lang: Lang = \"en\") => {\n  return dictionaries[lang];\n});\n","/**\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-07 07:53:42\n * @Description:\n */\n\nimport meta_en from \"./meta/en.json\";\nimport meta_home_landing_en from \"./meta/home/landing/en.json\";\n\nimport home_en from \"./home/en.json\";\n\nconst en = {\n  meta: meta_en,\n  meta_home_landing: meta_home_landing_en,\n\n  ...home_en,\n};\n\nexport default en;\n","/**\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-07 07:54:08\n * @Description:\n */\n\nimport meta_fa from \"./meta/fa.json\";\nimport meta_home_landing_fa from \"./meta/home/landing/fa.json\";\n\nimport home_fa from \"./home/fa.json\";\n\nconst fa = {\n  meta: meta_fa,\n  meta_home_landing: meta_home_landing_fa,\n\n  ...home_fa,\n};\n\nexport default fa;\n","/**\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-07 07:53:42\n * @Description:\n */\n\nimport meta_de from \"./meta/de.json\";\nimport meta_home_landing_de from \"./meta/home/landing/de.json\";\n\nimport home_de from \"./home/de.json\";\n\nconst en = {\n  meta: meta_de,\n  meta_home_landing: meta_home_landing_de,\n\n  ...home_de,\n};\n\nexport default en;\n","/**\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-04 07:17:02\n * @Description:\n */\n\nexport const languages = {\n  en: {\n    dir: \"ltr\",\n    locale: \"en_US\",\n    schemaLocale: \"en-US\",\n    name: \"English\",\n    flag: \"üá∫üá∏\",\n    nativeName: \"English\",\n  },\n  de: {\n    dir: \"ltr\",\n    locale: \"de\",\n    schemaLocale: \"de-DE\",\n    name: \"German\",\n    flag: \"üá©üá™\",\n    nativeName: \"Deutsch\",\n  },\n  fa: {\n    dir: \"rtl\",\n    locale: \"fa_IR\",\n    schemaLocale: \"fa-IR\",\n    name: \"Persian\",\n    flag: \"üáÆüá∑\",\n    nativeName: \"ŸÅÿßÿ±ÿ≥€å\",\n  },\n} as const;\n\nexport type Lang = keyof typeof languages;\n\nexport function getLocale(lang: Lang): string {\n  return languages[lang].locale;\n}\n\nexport function getSchemaLocale(lang: Lang): string {\n  return languages[lang].schemaLocale;\n}\n\nexport function getDirection(lang: Lang): \"ltr\" | \"rtl\" {\n  return languages[lang].dir;\n}\n\nexport function getName(lang: Lang): string {\n  return languages[lang].name;\n}\n\nexport function getNativeName(lang: Lang): string {\n  return languages[lang].nativeName;\n}\n\nexport function getFlag(lang: Lang): string {\n  return languages[lang].flag;\n}\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/[lang]/LangWrapper.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/[lang]/LangWrapper.tsx\",\n    \"default\",\n);\n","// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/[lang]/DetectDevice.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/[lang]/DetectDevice.tsx\",\n    \"default\",\n);\n","/*\n * @Author: Mohammad Felfelani\n * @Email: mfelfelani72@gmail.com\n * @Team:\n * @Date: 2025-10-04 11:48:20\n * @Description:\n */\n\nimport type { Metadata } from \"next\";\n\n// Components\n\nimport LangWrapper from \"@/app/[lang]/LangWrapper\";\nimport DetectDevice from \"@/app/[lang]/DetectDevice\";\n\n// Functions\n\nimport { getDictionary } from \"@/locale\";\n\n// Interfaces\n\nimport { LangLayoutProps } from \"@/Interfaces/global\";\nimport { languages, type Lang } from \"@/configs/language\";\n\n// Functions\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ lang: string }>;\n}): Promise<Metadata> {\n  const resolvedParams = await params;\n  const lang =\n    resolvedParams.lang in languages ? (resolvedParams.lang as Lang) : \"en\";\n  const dictionary = await getDictionary(lang);\n\n  return {\n    title: dictionary.meta.title,\n    description: dictionary.meta.description,\n    keywords: dictionary.meta.keywords || [],\n  };\n}\n\nexport default async function LangLayout({\n  children,\n  params,\n}: LangLayoutProps) {\n  const resolvedParams = await params;\n  const lang =\n    resolvedParams.lang in languages ? (resolvedParams.lang as Lang) : \"en\";\n\n  const dictionary = await getDictionary(lang);\n\n  return (\n    <>\n      <LangWrapper langFromUrl={lang} dictionary={dictionary}>\n      <DetectDevice />\n        {children}\n      </LangWrapper>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[5,6]}